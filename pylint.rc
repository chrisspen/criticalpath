# lint Python modules using external checkers.
# 
# This is the main checker controlling the other ones and the reports
# generation. It is itself both a raw checker and an astng checker in order
# to:
# * handle message activation / deactivation at the module level
# * handle some basic but necessary stats'data (number of classes, methods...)
# 
[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Profiled execution.
profile=no

# Add <file or directory> to the black list. It should be a base name, not a
# path. You may set this option multiple times.
# Ignore all auto-generated South migration directories.
# Ignore all auto-generated Django managers.
# Ignore all auto-generated Django Agent Hierachy Filters
ignore=CVS,migrations,managers,agenthierarchy_filters,auth_migrations,feincms_medialibrary_migrations,schedule_migrations,knowledge_migrations,feincms_page_migrations

# Pickle collected data for later comparisons.
persistent=yes

# Set the cache size for astng objects.
cache-size=500

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

[MESSAGES CONTROL]

# Enable only checker(s) with the given id(s). This option conflicts with the
# disable-checker option
#enable-checker=

# Enable all checker(s) except those with the given id(s). This option
# conflicts with the enable-checker option
#disable-checker=

# Enable all messages in the listed categories (IRCWEF).
#enable-msg-cat=

# Disable all messages in the listed categories (IRCWEF).
disable-msg-cat=I

# Enable the message(s) with the given id(s).
#enable-msg=

#http://docs.pylint.org/features.html
#http://pylint-messages.wikidot.com/all-codes
#pylint --list-msgs > pylint.messages

# All these are disabled below.
# See full list at https://gist.github.com/durden/10694028
# C1001: old-style class defined (Django uses these for Meta options)
# C0103: variable regex check.
# C0111: missing docstring check. It's too vague. Complains about no docstrings in __init__ and other places we don't care about.
# C0330: bad-continuation
# E1101: member check...this is usually wrong.
# E1103: type inference...this is usually wrong.
## F0401: unable to import
# R0201: method should be function check.
# R0401: cyclic import check...because sometimes it's wrong.
# R0902: too many instance attributes check.
# R0903: too few public methods check...makes no sense with Django.
# R0904: too many public method check.
# R0913: too many argument check.
# R0921: abstract class not referenced check.
# W0104: no effect check.
# W0142: magic check.
# W0212: protected data check.
# W0232: __init__ check.
## W0311: bad-indentation
# W0401: wildcard import.
# W0404: reimport check...this is sometimes wrong.
# W0511: TODO check.
# W0612: unused variable check.
# W0613: unused argument check. Too vague.
# W0614: wildcard import usage check.
# W0704: empty except check.
# E1002: Use of super on an old style class
# E1120: No value for argument
# R0901: Too many ancestors
# C0302: *Too many lines in module (%s)*
# R0801: *Similar lines in %s files*
# R0914: *Too many local variables (%s/%s)*
# R0912: *Too many branches (%s/%s)*
# R0915: *Too many statements (%s/%s)*
# W0703: *Catching too general exception %s*
# E1003: *Bad first argument %r given to super()*
# E0202: *An attribute defined in %s line %s hides this method*
# W0201: *Attribute %r defined outside __init__*
# C0325: *Unnecessary parens after %r keyword*
# E1102: *%s is not callable*
# W0122: *Use of exec*
# W0631: *Using possibly undefined loop variable %r*
# W0402: *Uses of a deprecated module %r*
# W0141: *Used builtin function %r*
# W0110: *map/filter on lambda could be replaced by comprehension*
# E0702: *Raising %s while only classes, instances or string are allowed*
## E0611: *No name %r in module %r*
# W0223: *Method %r is abstract in class %r but is not overridden*
# W0632: *Possible unbalanced tuple unpacking
# W0621: *Redefining name %r from outer scope (line %s)*
# W0108: *Lambda may not be necessary*
# W0403: *Relative import %r, should be %r*
# R0911: *Too many return statements (%s/%s)*
## E0602: *Undefined variable %r*
# W0710: nonstandard-exception
# E0203: *Access to member %r before its definition line %s*
# C0321: *More than one statement on a single line*
# E1127: *Slice index is not an int, None, or instance with __index__ (invalid-slice-index)*
# I0011: *Locally disabling %s (%s)*
# R0204: *Redefinition of %s type from %s to %s*
# R0101: *Too many nested blocks (%s/%s)*
# E1135: *Value '%s' doesn't support membership test*
# E1133: *Non-iterable value %s is used in an iterating context*
# W1001: *Use of "property" on an old style class*
# R0916: *Too many boolean expressions in if statement (%s/%s)*
# E1136: *Value '%s' is unsubscriptable*
disable=C1001,C0103,R0201,W0212,W0614,W0401,W0704,E1101,W0142,R0904,R0913,W0404,R0903,W0232,C0111,W0613,W0612,W0511,W0104,R0902,R0921,R0401,E1103,C0330,E1002,E1120,R0901,C0302,R0801,R0914,R0912,R0915,W0703,E1003,E0202,W0201,C0325,E1102,W0122,W0631,W0402,W0141,W0110,E0702,W0223,W0632,W0621,W0108,W0403,R0911,W0710,E0203,C0321,E1127,I0011,R0204,R0101,E1135,E1133,W1001,R0916,E1136,using-constant-test,not-context-manager,bad-mcs-classmethod-argument,catching-non-exception,no-else-return,consider-using-ternary,no-name-in-module,assign-to-new-keyword,invalid-unary-operand-type,unsupported-assignment-operation,cell-var-from-loop,inconsistent-return-statements,keyword-arg-before-vararg
#undefined-variable,import-error,R0402,RP0402

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text

# Include message's id in output
include-ids=yes

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (R0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (R0004).
comment=no

# Enable the report(s) with the given id(s).
#enable-report=

# Disable the report(s) with the given id(s).
#disable-report=


# checks for :
# * doc strings
# * modules / classes / functions / methods / arguments / variables name
# * number of arguments, local variables, branches, returns and statements in
# functions, methods
# * required module attributes
# * dangerous default values as arguments
# * redefinition of function / method / class
# * uses of the global statement
# 
[BASIC]

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input


# try to find bugs in the code using type inference
# 
[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=REQUEST,acl_users,aq_parent


# checks for
# * unused variables / imports
# * undefined variables
# * redefinition of variable from builtins or from an outer scope
# * use of variable before assignment
# 
[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


# checks for
# * external modules dependencies
# * relative / wildcard imports
# * cyclic imports
# * uses of deprecated modules
# 
[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report R0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report R0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report R0402 must
# not be disabled)
int-import-graph=


# checks for sign of poor/misdesign:
# * number of methods, attributes, local variables...
# * size, complexity of functions, methods
# 
[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branchs=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20


# checks for :
# * methods without self as first argument
# * overridden methods signature
# * access only to existent members via self
# * attributes not defined in the __init__ method
# * supported interfaces implementation
# * unreachable code
# 
[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# checks for similarities and duplicated code. This computation may be
# memory / CPU intensive, so you should disable it if you experiments some
# problems.
# 
[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


# checks for :
# * unauthorized constructions
# * strict indentation
# * line length
# * use of <> instead of !=
# 
[FORMAT]

# Maximum number of characters on a single line.
max-line-length=160

# Maximum number of lines in a module
max-module-lines=2000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


# checks for:
# * warning notes in the code like FIXME, XXX
# * PEP 263: source code with non ascii character but no encoding declaration
# 
[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO
